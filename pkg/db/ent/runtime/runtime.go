// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/NpoolPlatform/cms-middleware/pkg/db/ent/acl"
	"github.com/NpoolPlatform/cms-middleware/pkg/db/ent/article"
	"github.com/NpoolPlatform/cms-middleware/pkg/db/ent/category"
	"github.com/NpoolPlatform/cms-middleware/pkg/db/ent/media"
	"github.com/NpoolPlatform/cms-middleware/pkg/db/ent/schema"
	"github.com/google/uuid"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	aclMixin := schema.ACL{}.Mixin()
	acl.Policy = privacy.NewPolicies(aclMixin[0], schema.ACL{})
	acl.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := acl.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	aclMixinFields0 := aclMixin[0].Fields()
	_ = aclMixinFields0
	aclMixinFields1 := aclMixin[1].Fields()
	_ = aclMixinFields1
	aclFields := schema.ACL{}.Fields()
	_ = aclFields
	// aclDescCreatedAt is the schema descriptor for created_at field.
	aclDescCreatedAt := aclMixinFields0[0].Descriptor()
	// acl.DefaultCreatedAt holds the default value on creation for the created_at field.
	acl.DefaultCreatedAt = aclDescCreatedAt.Default.(func() uint32)
	// aclDescUpdatedAt is the schema descriptor for updated_at field.
	aclDescUpdatedAt := aclMixinFields0[1].Descriptor()
	// acl.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	acl.DefaultUpdatedAt = aclDescUpdatedAt.Default.(func() uint32)
	// acl.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	acl.UpdateDefaultUpdatedAt = aclDescUpdatedAt.UpdateDefault.(func() uint32)
	// aclDescDeletedAt is the schema descriptor for deleted_at field.
	aclDescDeletedAt := aclMixinFields0[2].Descriptor()
	// acl.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	acl.DefaultDeletedAt = aclDescDeletedAt.Default.(func() uint32)
	// aclDescEntID is the schema descriptor for ent_id field.
	aclDescEntID := aclMixinFields1[1].Descriptor()
	// acl.DefaultEntID holds the default value on creation for the ent_id field.
	acl.DefaultEntID = aclDescEntID.Default.(func() uuid.UUID)
	// aclDescRoleID is the schema descriptor for role_id field.
	aclDescRoleID := aclFields[1].Descriptor()
	// acl.DefaultRoleID holds the default value on creation for the role_id field.
	acl.DefaultRoleID = aclDescRoleID.Default.(func() uuid.UUID)
	// aclDescArticleKey is the schema descriptor for article_key field.
	aclDescArticleKey := aclFields[2].Descriptor()
	// acl.DefaultArticleKey holds the default value on creation for the article_key field.
	acl.DefaultArticleKey = aclDescArticleKey.Default.(func() uuid.UUID)
	articleMixin := schema.Article{}.Mixin()
	article.Policy = privacy.NewPolicies(articleMixin[0], schema.Article{})
	article.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := article.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	articleMixinFields0 := articleMixin[0].Fields()
	_ = articleMixinFields0
	articleMixinFields1 := articleMixin[1].Fields()
	_ = articleMixinFields1
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescCreatedAt is the schema descriptor for created_at field.
	articleDescCreatedAt := articleMixinFields0[0].Descriptor()
	// article.DefaultCreatedAt holds the default value on creation for the created_at field.
	article.DefaultCreatedAt = articleDescCreatedAt.Default.(func() uint32)
	// articleDescUpdatedAt is the schema descriptor for updated_at field.
	articleDescUpdatedAt := articleMixinFields0[1].Descriptor()
	// article.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	article.DefaultUpdatedAt = articleDescUpdatedAt.Default.(func() uint32)
	// article.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	article.UpdateDefaultUpdatedAt = articleDescUpdatedAt.UpdateDefault.(func() uint32)
	// articleDescDeletedAt is the schema descriptor for deleted_at field.
	articleDescDeletedAt := articleMixinFields0[2].Descriptor()
	// article.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	article.DefaultDeletedAt = articleDescDeletedAt.Default.(func() uint32)
	// articleDescEntID is the schema descriptor for ent_id field.
	articleDescEntID := articleMixinFields1[1].Descriptor()
	// article.DefaultEntID holds the default value on creation for the ent_id field.
	article.DefaultEntID = articleDescEntID.Default.(func() uuid.UUID)
	// articleDescCategoryID is the schema descriptor for category_id field.
	articleDescCategoryID := articleFields[1].Descriptor()
	// article.DefaultCategoryID holds the default value on creation for the category_id field.
	article.DefaultCategoryID = articleDescCategoryID.Default.(func() uuid.UUID)
	// articleDescAuthorID is the schema descriptor for author_id field.
	articleDescAuthorID := articleFields[2].Descriptor()
	// article.DefaultAuthorID holds the default value on creation for the author_id field.
	article.DefaultAuthorID = articleDescAuthorID.Default.(func() uuid.UUID)
	// articleDescArticleKey is the schema descriptor for article_key field.
	articleDescArticleKey := articleFields[3].Descriptor()
	// article.DefaultArticleKey holds the default value on creation for the article_key field.
	article.DefaultArticleKey = articleDescArticleKey.Default.(func() uuid.UUID)
	// articleDescTitle is the schema descriptor for title field.
	articleDescTitle := articleFields[4].Descriptor()
	// article.DefaultTitle holds the default value on creation for the title field.
	article.DefaultTitle = articleDescTitle.Default.(string)
	// articleDescSubtitle is the schema descriptor for subtitle field.
	articleDescSubtitle := articleFields[5].Descriptor()
	// article.DefaultSubtitle holds the default value on creation for the subtitle field.
	article.DefaultSubtitle = articleDescSubtitle.Default.(string)
	// articleDescDigest is the schema descriptor for digest field.
	articleDescDigest := articleFields[6].Descriptor()
	// article.DefaultDigest holds the default value on creation for the digest field.
	article.DefaultDigest = articleDescDigest.Default.(string)
	// articleDescStatus is the schema descriptor for status field.
	articleDescStatus := articleFields[7].Descriptor()
	// article.DefaultStatus holds the default value on creation for the status field.
	article.DefaultStatus = articleDescStatus.Default.(string)
	// articleDescHost is the schema descriptor for host field.
	articleDescHost := articleFields[8].Descriptor()
	// article.DefaultHost holds the default value on creation for the host field.
	article.DefaultHost = articleDescHost.Default.(string)
	// articleDescVersion is the schema descriptor for version field.
	articleDescVersion := articleFields[9].Descriptor()
	// article.DefaultVersion holds the default value on creation for the version field.
	article.DefaultVersion = articleDescVersion.Default.(uint32)
	// articleDescIso is the schema descriptor for iso field.
	articleDescIso := articleFields[10].Descriptor()
	// article.DefaultIso holds the default value on creation for the iso field.
	article.DefaultIso = articleDescIso.Default.(string)
	// articleDescContentURL is the schema descriptor for content_url field.
	articleDescContentURL := articleFields[11].Descriptor()
	// article.DefaultContentURL holds the default value on creation for the content_url field.
	article.DefaultContentURL = articleDescContentURL.Default.(string)
	// articleDescLatest is the schema descriptor for latest field.
	articleDescLatest := articleFields[12].Descriptor()
	// article.DefaultLatest holds the default value on creation for the latest field.
	article.DefaultLatest = articleDescLatest.Default.(bool)
	// articleDescPublishedAt is the schema descriptor for published_at field.
	articleDescPublishedAt := articleFields[13].Descriptor()
	// article.DefaultPublishedAt holds the default value on creation for the published_at field.
	article.DefaultPublishedAt = articleDescPublishedAt.Default.(uint32)
	// articleDescACLEnabled is the schema descriptor for acl_enabled field.
	articleDescACLEnabled := articleFields[14].Descriptor()
	// article.DefaultACLEnabled holds the default value on creation for the acl_enabled field.
	article.DefaultACLEnabled = articleDescACLEnabled.Default.(bool)
	categoryMixin := schema.Category{}.Mixin()
	category.Policy = privacy.NewPolicies(categoryMixin[0], schema.Category{})
	category.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := category.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	categoryMixinFields0 := categoryMixin[0].Fields()
	_ = categoryMixinFields0
	categoryMixinFields1 := categoryMixin[1].Fields()
	_ = categoryMixinFields1
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescCreatedAt is the schema descriptor for created_at field.
	categoryDescCreatedAt := categoryMixinFields0[0].Descriptor()
	// category.DefaultCreatedAt holds the default value on creation for the created_at field.
	category.DefaultCreatedAt = categoryDescCreatedAt.Default.(func() uint32)
	// categoryDescUpdatedAt is the schema descriptor for updated_at field.
	categoryDescUpdatedAt := categoryMixinFields0[1].Descriptor()
	// category.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	category.DefaultUpdatedAt = categoryDescUpdatedAt.Default.(func() uint32)
	// category.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	category.UpdateDefaultUpdatedAt = categoryDescUpdatedAt.UpdateDefault.(func() uint32)
	// categoryDescDeletedAt is the schema descriptor for deleted_at field.
	categoryDescDeletedAt := categoryMixinFields0[2].Descriptor()
	// category.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	category.DefaultDeletedAt = categoryDescDeletedAt.Default.(func() uint32)
	// categoryDescEntID is the schema descriptor for ent_id field.
	categoryDescEntID := categoryMixinFields1[1].Descriptor()
	// category.DefaultEntID holds the default value on creation for the ent_id field.
	category.DefaultEntID = categoryDescEntID.Default.(func() uuid.UUID)
	// categoryDescParentID is the schema descriptor for parent_id field.
	categoryDescParentID := categoryFields[1].Descriptor()
	// category.DefaultParentID holds the default value on creation for the parent_id field.
	category.DefaultParentID = categoryDescParentID.Default.(func() uuid.UUID)
	// categoryDescName is the schema descriptor for name field.
	categoryDescName := categoryFields[2].Descriptor()
	// category.DefaultName holds the default value on creation for the name field.
	category.DefaultName = categoryDescName.Default.(string)
	// categoryDescSlug is the schema descriptor for slug field.
	categoryDescSlug := categoryFields[3].Descriptor()
	// category.DefaultSlug holds the default value on creation for the slug field.
	category.DefaultSlug = categoryDescSlug.Default.(string)
	// categoryDescEnabled is the schema descriptor for enabled field.
	categoryDescEnabled := categoryFields[4].Descriptor()
	// category.DefaultEnabled holds the default value on creation for the enabled field.
	category.DefaultEnabled = categoryDescEnabled.Default.(bool)
	// categoryDescIndex is the schema descriptor for index field.
	categoryDescIndex := categoryFields[5].Descriptor()
	// category.DefaultIndex holds the default value on creation for the index field.
	category.DefaultIndex = categoryDescIndex.Default.(uint32)
	mediaMixin := schema.Media{}.Mixin()
	media.Policy = privacy.NewPolicies(mediaMixin[0], schema.Media{})
	media.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := media.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	mediaMixinFields0 := mediaMixin[0].Fields()
	_ = mediaMixinFields0
	mediaMixinFields1 := mediaMixin[1].Fields()
	_ = mediaMixinFields1
	mediaFields := schema.Media{}.Fields()
	_ = mediaFields
	// mediaDescCreatedAt is the schema descriptor for created_at field.
	mediaDescCreatedAt := mediaMixinFields0[0].Descriptor()
	// media.DefaultCreatedAt holds the default value on creation for the created_at field.
	media.DefaultCreatedAt = mediaDescCreatedAt.Default.(func() uint32)
	// mediaDescUpdatedAt is the schema descriptor for updated_at field.
	mediaDescUpdatedAt := mediaMixinFields0[1].Descriptor()
	// media.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	media.DefaultUpdatedAt = mediaDescUpdatedAt.Default.(func() uint32)
	// media.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	media.UpdateDefaultUpdatedAt = mediaDescUpdatedAt.UpdateDefault.(func() uint32)
	// mediaDescDeletedAt is the schema descriptor for deleted_at field.
	mediaDescDeletedAt := mediaMixinFields0[2].Descriptor()
	// media.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	media.DefaultDeletedAt = mediaDescDeletedAt.Default.(func() uint32)
	// mediaDescEntID is the schema descriptor for ent_id field.
	mediaDescEntID := mediaMixinFields1[1].Descriptor()
	// media.DefaultEntID holds the default value on creation for the ent_id field.
	media.DefaultEntID = mediaDescEntID.Default.(func() uuid.UUID)
	// mediaDescName is the schema descriptor for name field.
	mediaDescName := mediaFields[1].Descriptor()
	// media.DefaultName holds the default value on creation for the name field.
	media.DefaultName = mediaDescName.Default.(string)
	// mediaDescExt is the schema descriptor for ext field.
	mediaDescExt := mediaFields[2].Descriptor()
	// media.DefaultExt holds the default value on creation for the ext field.
	media.DefaultExt = mediaDescExt.Default.(string)
	// mediaDescMediaURL is the schema descriptor for media_url field.
	mediaDescMediaURL := mediaFields[3].Descriptor()
	// media.DefaultMediaURL holds the default value on creation for the media_url field.
	media.DefaultMediaURL = mediaDescMediaURL.Default.(string)
	// mediaDescCreatedBy is the schema descriptor for created_by field.
	mediaDescCreatedBy := mediaFields[4].Descriptor()
	// media.DefaultCreatedBy holds the default value on creation for the created_by field.
	media.DefaultCreatedBy = mediaDescCreatedBy.Default.(func() uuid.UUID)
}

const (
	Version = "v0.11.2" // Version of ent codegen.
)
