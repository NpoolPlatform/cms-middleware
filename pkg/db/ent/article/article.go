// Code generated by ent, DO NOT EDIT.

package article

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the article type in the database.
	Label = "article"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldCategoryID holds the string denoting the category_id field in the database.
	FieldCategoryID = "category_id"
	// FieldAuthorID holds the string denoting the author_id field in the database.
	FieldAuthorID = "author_id"
	// FieldArticleKey holds the string denoting the article_key field in the database.
	FieldArticleKey = "article_key"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldSubtitle holds the string denoting the subtitle field in the database.
	FieldSubtitle = "subtitle"
	// FieldDigest holds the string denoting the digest field in the database.
	FieldDigest = "digest"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldHost holds the string denoting the host field in the database.
	FieldHost = "host"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldIso holds the string denoting the iso field in the database.
	FieldIso = "iso"
	// FieldContentURL holds the string denoting the content_url field in the database.
	FieldContentURL = "content_url"
	// FieldLatest holds the string denoting the latest field in the database.
	FieldLatest = "latest"
	// FieldPublishedAt holds the string denoting the published_at field in the database.
	FieldPublishedAt = "published_at"
	// FieldACLEnabled holds the string denoting the acl_enabled field in the database.
	FieldACLEnabled = "acl_enabled"
	// Table holds the table name of the article in the database.
	Table = "articles"
)

// Columns holds all SQL columns for article fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldAppID,
	FieldCategoryID,
	FieldAuthorID,
	FieldArticleKey,
	FieldTitle,
	FieldSubtitle,
	FieldDigest,
	FieldStatus,
	FieldHost,
	FieldVersion,
	FieldIso,
	FieldContentURL,
	FieldLatest,
	FieldPublishedAt,
	FieldACLEnabled,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/cms-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultCategoryID holds the default value on creation for the "category_id" field.
	DefaultCategoryID func() uuid.UUID
	// DefaultAuthorID holds the default value on creation for the "author_id" field.
	DefaultAuthorID func() uuid.UUID
	// DefaultArticleKey holds the default value on creation for the "article_key" field.
	DefaultArticleKey func() uuid.UUID
	// DefaultTitle holds the default value on creation for the "title" field.
	DefaultTitle string
	// DefaultSubtitle holds the default value on creation for the "subtitle" field.
	DefaultSubtitle string
	// DefaultDigest holds the default value on creation for the "digest" field.
	DefaultDigest string
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus string
	// DefaultHost holds the default value on creation for the "host" field.
	DefaultHost string
	// DefaultVersion holds the default value on creation for the "version" field.
	DefaultVersion uint32
	// DefaultIso holds the default value on creation for the "iso" field.
	DefaultIso string
	// DefaultContentURL holds the default value on creation for the "content_url" field.
	DefaultContentURL string
	// DefaultLatest holds the default value on creation for the "latest" field.
	DefaultLatest bool
	// DefaultPublishedAt holds the default value on creation for the "published_at" field.
	DefaultPublishedAt uint32
	// DefaultACLEnabled holds the default value on creation for the "acl_enabled" field.
	DefaultACLEnabled bool
)
